{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "plugins": ["@typescript-eslint", "simple-import-sort", "import", "graphql"],
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": [
    "**/dist",
    "client_codegen.ts",
    "vitest.config.ts",
    "tsup.config.js"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "root": true,
  "overrides": [
    {
      "files": ["src/**/*.ts", "__tests__/**/*.ts"],
      "parserOptions": {
        "project": "./tsconfig.json"
      }
    },
    {
      "files": ["__e2e__/**/*.mjs", "__e2e__/**/*.ts"],
      "parserOptions": {
        "project": "./__e2e__/tsconfig.json"
      }
    },
    {
      "files": ["**/*.graphql"],
      "parser": "@graphql-eslint/eslint-plugin",
      "plugins": ["graphql"],
      "rules": {
        "prettier/prettier": "error"
      }
    }
  ],
  "rules": {
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    // to enforce using type for objec type definitions, can be type or interface
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    // Prefer T[] over Array<T> for array type definitions
    "@typescript-eslint/array-type": ["error", { "default": "array" }],
    //// Prefer optional chaining over explicit null/undefined checks
    "@typescript-eslint/prefer-optional-chain": "error",
    // Require comments in empty functions to document intent
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": []
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "@typescript-eslint/ban-ts-comment": "warn"
  },
  "env": {
    "node": true
  }
}
