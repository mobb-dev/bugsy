{
    "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
    "version": "2.1.0",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "SnykCode",
                    "semanticVersion": "1.0.0",
                    "version": "1.0.0",
                    "rules": [
                        {
                            "id": "java/HardcodedPassword",
                            "name": "HardcodedPassword",
                            "shortDescription": {
                                "text": "Use of Hardcoded Credentials"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                                "text": ""
                            },
                            "properties": {
                                "tags": ["java"],
                                "categories": ["Security"],
                                "exampleCommitFixes": [
                                    {
                                        "commitURL": "https://github.com/utluiz/spring-examples/commit/56e44932a3a004c3ac96ce1caa3e6d8817230f6e?diff=split#diff-19d771f687bc8ca37d378c39d20ed425L26",
                                        "lines": [
                                            {
                                                "line": "  ds.setUrl(\"jdbc:mysql://localhost:3311/agenda\");",
                                                "lineNumber": 23,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "  ds.setUrl(\"jdbc:mysql://localhost/agenda\");",
                                                "lineNumber": 20,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  ds.setUser(\"root\");",
                                                "lineNumber": 24,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  ds.setPassword(\"root\");",
                                                "lineNumber": 25,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "  ds.setPassword(\"\");",
                                                "lineNumber": 22,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  return ds;",
                                                "lineNumber": 26,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 27,
                                                "lineChange": "none"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/Evolveum/midpoint/commit/9ce1d7ff1e78ca65d6b614c52035e1971d1187cd?diff=split#diff-0003b3a408395a5640011d7c8422d19bL43",
                                        "lines": [
                                            {
                                                "line": "      // set the password for our message.",
                                                "lineNumber": 41,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      pc.setPassword(\"5ecr3t\");",
                                                "lineNumber": 42,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      pc.setPassword(Main.ADM_PASSWORD);",
                                                "lineNumber": 42,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 43,
                                                "lineChange": "none"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/theonedev/onedev/commit/ee60c786981347fc5ab6685656f3de2ea67045f7?diff=split#diff-7f6f95fdc3f39c216b4bd099d0ca65b6L60",
                                        "lines": [
                                            {
                                                "line": "  System.exit(1);",
                                                "lineNumber": 61,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 62,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "root.setPassword(\"12345\");",
                                                "lineNumber": 59,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String password = Bootstrap.command.getArgs()[0];",
                                                "lineNumber": 63,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "root.setPassword(password);",
                                                "lineNumber": 64,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "accountManager.save(root);",
                                                "lineNumber": 65,
                                                "lineChange": "none"
                                            }
                                        ]
                                    }
                                ],
                                "exampleCommitDescriptions": [
                                    "Added user/password configuration from YML file.",
                                    "Added ability to configure databases to run tests against."
                                ],
                                "precision": "very-high",
                                "repoDatasetSize": 383,
                                "cwe": ["CWE-798", "CWE-259"]
                            }
                        },
                        {
                            "id": "java/IndirectCommandInjection",
                            "name": "IndirectCommandInjection",
                            "shortDescription": {
                                "text": "Command Injection"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "help": {
                                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n### Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                                "text": ""
                            },
                            "properties": {
                                "tags": ["java"],
                                "categories": ["Security"],
                                "exampleCommitFixes": [
                                    {
                                        "commitURL": "https://github.com/apache/joshua/commit/92c797ffdee361adfdf10c91afe7af08d29e6e17?diff=split#diff-438e6e2bf8732a786b739705b7382c48L125",
                                        "lines": [
                                            {
                                                "line": "static String decoderConfigFileName, decoderCommandFileName;",
                                                "lineNumber": 126,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "public static void main(String[] args) throws Exception",
                                                "lineNumber": 128,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 129,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  EvaluationMetric.set_knownNames();",
                                                "lineNumber": 130,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  System.exit(0);",
                                                "lineNumber": 134,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else if (args.length == 1) {",
                                                "lineNumber": 135,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  processArgsArray(cfgFileToArgsArray(args[0]));",
                                                "lineNumber": 136,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 137,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  processArgsArray(args);",
                                                "lineNumber": 138,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int r = 0; r < refsPerSen; ++r) {",
                                                "lineNumber": 149,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  println(\"Testing evaluation metric calculation on reference set \" + r + \":\",2);",
                                                "lineNumber": 150,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  test_score(refFileName, refsPerSen, r, true,2);",
                                                "lineNumber": 151,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  println(\"\",2);",
                                                "lineNumber": 152,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 153,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "println(\"\",1);",
                                                "lineNumber": 189,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "numParams = countLines(paramsFileName);",
                                                "lineNumber": 191,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "numSentences = countLines(sourceFileName);",
                                                "lineNumber": 192,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (numSentences * refsPerSen != countLines(refFileName)) {",
                                                "lineNumber": 194,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  println(\"Line count mismatch between \" + sourceFileName + \" and \" + refFileName);",
                                                "lineNumber": 195,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  System.exit(20);",
                                                "lineNumber": 196,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "// create copy of config file",
                                                "lineNumber": 200,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "copyFile(decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                                                "lineNumber": 201,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "// read paramter names",
                                                "lineNumber": 212,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile_names = new BufferedReader(new FileReader(paramsFileName));",
                                                "lineNumber": 213,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int c = 1; c <= numParams; ++c) {",
                                                "lineNumber": 215,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "// initialize lambda[]",
                                                "lineNumber": 223,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "Scanner inFile_init = new Scanner(new FileReader(paramsFileName));",
                                                "lineNumber": 224,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String dummy = \"\";",
                                                "lineNumber": 226,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "// read in reference sentences",
                                                "lineNumber": 280,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile_refs = new BufferedReader(new FileReader(refFileName));",
                                                "lineNumber": 282,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String line;",
                                                "lineNumber": 283,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "// read in decoder command",
                                                "lineNumber": 296,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile_comm = new BufferedReader(new FileReader(decoderCommandFileName));",
                                                "lineNumber": 298,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "decoderCommand = inFile_comm.readLine();",
                                                "lineNumber": 299,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "inFile_comm.close();",
                                                "lineNumber": 300,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "/******************************/",
                                                "lineNumber": 415,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "createConfigFile(lambda,decoderConfigFileName,decoderConfigFileName+\".orig.MERT\");",
                                                "lineNumber": 417,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "/***************/",
                                                "lineNumber": 419,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": " ",
                                                "lineNumber": 422,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      println(\"Running Joshua decoder...\",1);",
                                                "lineNumber": 423,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      myDecoder.initializeDecoder(decoderConfigFileName);",
                                                "lineNumber": 424,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      myDecoder.decodingTestSet(sourceFileName, decoderOutFileName);",
                                                "lineNumber": 425,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "/*",
                                                "lineNumber": 427,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      println(\"Running decoder...\",1);",
                                                "lineNumber": 428,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": " ",
                                                "lineNumber": 429,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      Runtime rt = Runtime.getRuntime();",
                                                "lineNumber": 430,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      Process p = rt.exec (decoderCommand);",
                                                "lineNumber": 431,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      InputStream is = p.getErrorStream();",
                                                "lineNumber": 432,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      InputStreamReader isr = new InputStreamReader(is);",
                                                "lineNumber": 433,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "println(\"Ensuring proper decoder output.\",2);",
                                                "lineNumber": 451,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "checkFile(decoderOutFileName);",
                                                "lineNumber": 453,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "fixDecoderOutput();",
                                                "lineNumber": 455,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "progress = 0;",
                                                "lineNumber": 461,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                                                "lineNumber": 463,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String line, candidate_str;",
                                                "lineNumber": 464,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (saveInterCfg) {",
                                                "lineNumber": 635,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  // create config file with current values",
                                                "lineNumber": 636,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  createConfigFile(lambda, decoderConfigFileName+\".\"+iteration,decoderConfigFileName+\".orig.MERT\");",
                                                "lineNumber": 637,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 638,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static void fixDecoderOutput() throws Exception",
                                                "lineNumber": 983,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 984,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  copyFile(decoderOutFileName,decoderOutFileName+\".temp.MERT\");",
                                                "lineNumber": 985,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName+\".temp.MERT\"));",
                                                "lineNumber": 986,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  PrintWriter outFile = new PrintWriter(decoderOutFileName);",
                                                "lineNumber": 987,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  String line, prevLine;",
                                                "lineNumber": 988,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  // delete temp copy of old decoder output",
                                                "lineNumber": 1033,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  File cp = new File(decoderOutFileName+\".temp.MERT\");",
                                                "lineNumber": 1034,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  cp.delete();",
                                                "lineNumber": 1035,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1037,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static void createConfigFile(double[] params, String cfgFileName, String templateFileName) throws Exception",
                                                "lineNumber": 1039,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1040,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  // i.e. create cfgFileName, which is similar to templateFileName, but with",
                                                "lineNumber": 1041,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile = new BufferedReader(new FileReader(templateFileName));",
                                                "lineNumber": 1044,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "PrintWriter outFile = new PrintWriter(cfgFileName);",
                                                "lineNumber": 1045,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String line = inFile.readLine();",
                                                "lineNumber": 1047,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1067,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static void copyFile(String sourceFileName, String targetFileName) throws Exception",
                                                "lineNumber": 1069,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1070,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  InputStream inStream = new FileInputStream(new File(sourceFileName));",
                                                "lineNumber": 1071,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  BufferedReader inFile = new BufferedReader(new InputStreamReader(inStream, \"utf8\"));",
                                                "lineNumber": 1072,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static void test_score(String inFileName, int candPerSen, int testIndex, boolean isRefFile, int v) throws Exception",
                                                "lineNumber": 1097,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1098,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    // test that the translations in inFileName get the expected scores",
                                                "lineNumber": 1099,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                                                "lineNumber": 1118,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile = new BufferedReader(new FileReader(inFileName));",
                                                "lineNumber": 1120,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String line, candidate_str;",
                                                "lineNumber": 1121,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "SentenceInfo[] candSentenceInfo = new SentenceInfo[numSentences];",
                                                "lineNumber": 1164,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "BufferedReader inFile = new BufferedReader(new FileReader(decoderOutFileName));",
                                                "lineNumber": 1166,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String line, candidate_str;",
                                                "lineNumber": 1167,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1252,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static String[] cfgFileToArgsArray(String fileName) throws Exception",
                                                "lineNumber": 1254,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1255,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  checkFile(fileName);",
                                                "lineNumber": 1256,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "while (i < args.length) {",
                                                "lineNumber": 1331,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  String option = args[i];",
                                                "lineNumber": 1332,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (option.equals(\"-s\")) { sourceFileName = args[i+1]; }",
                                                "lineNumber": 1333,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  else if (option.equals(\"-r\")) { refFileName = args[i+1]; }",
                                                "lineNumber": 1334,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  else if (option.equals(\"-rps\")) {",
                                                "lineNumber": 1335,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    refsPerSen = Integer.parseInt(args[i+1]);",
                                                "lineNumber": 1336,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (maxGramLength < 1) { println(\"maxGramLength must be positive.\"); System.exit(10); }",
                                                "lineNumber": 1341,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1342,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-decOut\")) { decoderOutFileName = args[i+1]; }",
                                                "lineNumber": 1343,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-decExit\")) {",
                                                "lineNumber": 1344,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  validDecoderExitValue = Integer.parseInt(args[i+1]);",
                                                "lineNumber": 1345,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1346,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-dir\")) { dirPrefix = args[i+1]; }",
                                                "lineNumber": 1347,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-p\")) { paramsFileName = args[i+1]; }",
                                                "lineNumber": 1348,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-rand\")) {",
                                                "lineNumber": 1349,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  int rand = Integer.parseInt(args[i+1]);",
                                                "lineNumber": 1350,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (runCount < 1) { println(\"runCount must be positive.\"); System.exit(10); }",
                                                "lineNumber": 1357,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1358,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-fin\")) { finalLambdasFileName = args[i+1]; }",
                                                "lineNumber": 1359,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-cmd\")) { decoderCommandFileName = args[i+1]; }",
                                                "lineNumber": 1360,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-dcfg\")) { decoderConfigFileName = args[i+1]; }",
                                                "lineNumber": 1361,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "else if (option.equals(\"-save\")) {",
                                                "lineNumber": 1362,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  int save = Integer.parseInt(args[i+1]);",
                                                "lineNumber": 1363,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (runCount > 1 && randInits == false) { println(\"For runCount > 1, randInits must be set to 1.\"); System.exit(10); }",
                                                "lineNumber": 1408,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (dirPrefix != null) {",
                                                "lineNumber": 1410,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  sourceFileName = fullPath(dirPrefix,sourceFileName);",
                                                "lineNumber": 1411,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  refFileName = fullPath(dirPrefix,refFileName);",
                                                "lineNumber": 1412,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  decoderOutFileName = fullPath(dirPrefix,decoderOutFileName);",
                                                "lineNumber": 1413,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  paramsFileName = fullPath(dirPrefix,paramsFileName);",
                                                "lineNumber": 1414,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  finalLambdasFileName = fullPath(dirPrefix,finalLambdasFileName);",
                                                "lineNumber": 1415,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  decoderCommandFileName = fullPath(dirPrefix,decoderCommandFileName);",
                                                "lineNumber": 1416,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  decoderConfigFileName = fullPath(dirPrefix,decoderConfigFileName);",
                                                "lineNumber": 1417,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1418,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (refsPerSen > 1) {",
                                                "lineNumber": 1420,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  // the provided refFileName might be a prefix",
                                                "lineNumber": 1421,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  File dummy = new File(refFileName);",
                                                "lineNumber": 1422,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (!dummy.exists()) {",
                                                "lineNumber": 1423,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    refFileName = createUnifiedRefFile(refFileName,refsPerSen);",
                                                "lineNumber": 1424,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  }",
                                                "lineNumber": 1425,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1426,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "checkFile(sourceFileName);",
                                                "lineNumber": 1428,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "checkFile(paramsFileName);",
                                                "lineNumber": 1429,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "checkFile(decoderCommandFileName);",
                                                "lineNumber": 1430,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "checkFile(decoderConfigFileName);",
                                                "lineNumber": 1431,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} // processArgs(String[] args)",
                                                "lineNumber": 1443,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static void checkFile(String fileName)",
                                                "lineNumber": 1445,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1446,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (!fileExists(fileName)) {",
                                                "lineNumber": 1447,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    println(\"The file \" + fileName + \" was not found!\");",
                                                "lineNumber": 1448,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.exit(40);",
                                                "lineNumber": 1449,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1451,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static boolean fileExists(String fileName)",
                                                "lineNumber": 1453,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1454,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  File checker = new File(fileName);",
                                                "lineNumber": 1455,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  return checker.exists();",
                                                "lineNumber": 1456,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1457,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static String createUnifiedRefFile(String prefix, int numFiles) throws Exception",
                                                "lineNumber": 1459,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1460,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  if (numFiles < 2) {",
                                                "lineNumber": 1461,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    println(\"Warning: createUnifiedRefFile called with numFiles = \" + numFiles + \"; doing nothing.\");",
                                                "lineNumber": 1462,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    return prefix;",
                                                "lineNumber": 1463,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  } else {",
                                                "lineNumber": 1464,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    File checker;",
                                                "lineNumber": 1465,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    checker = new File(prefix+\"1\");",
                                                "lineNumber": 1466,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    if (!checker.exists()) {",
                                                "lineNumber": 1468,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      checker = new File(prefix+\".1\");",
                                                "lineNumber": 1469,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      if (!checker.exists()) {",
                                                "lineNumber": 1470,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        println(\"Can't find reference files.\");",
                                                "lineNumber": 1471,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        System.exit(50);",
                                                "lineNumber": 1472,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      } else {",
                                                "lineNumber": 1473,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        prefix = prefix + \".\";",
                                                "lineNumber": 1474,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      }",
                                                "lineNumber": 1475,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    }",
                                                "lineNumber": 1476,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    String outFileName;",
                                                "lineNumber": 1478,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    if (prefix.endsWith(\".\")) { outFileName = prefix+\"all\"; }",
                                                "lineNumber": 1479,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    else { outFileName = prefix+\".all\"; }",
                                                "lineNumber": 1480,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    PrintWriter outFile = new PrintWriter(outFileName);",
                                                "lineNumber": 1482,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    BufferedReader[] inFile = new BufferedReader[numFiles];",
                                                "lineNumber": 1484,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  for (int r = 0; r < numFiles; ++r) { inFile[r].close(); }",
                                                "lineNumber": 1512,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  return outFileName;",
                                                "lineNumber": 1514,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1516,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} // createUnifiedRefFile(String prefix, int numFiles)",
                                                "lineNumber": 1518,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static int countLines(String fileName) throws Exception",
                                                "lineNumber": 1520,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1521,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  BufferedReader inFile = new BufferedReader(new FileReader(fileName));",
                                                "lineNumber": 1522,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  String line;",
                                                "lineNumber": 1524,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1589,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private static String fullPath(String dir, String fileName)",
                                                "lineNumber": 1591,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "{",
                                                "lineNumber": 1592,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  File dummyFile = new File(dir,fileName);",
                                                "lineNumber": 1593,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  return dummyFile.getAbsolutePath();",
                                                "lineNumber": 1594,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 1595,
                                                "lineChange": "none"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/virtualcell/vcell/commit/7327deda4296af0f802e4b1a21ee47c013a708c6?diff=split#diff-efea0b403bca8feff6ef723e9fd1d2eaL16",
                                        "lines": [
                                            {
                                                "line": " * @param args",
                                                "lineNumber": 22,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": " */",
                                                "lineNumber": 23,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "public static void main(String[] args) throws Exception{",
                                                "lineNumber": 15,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 55,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "public static void main(String[] args){",
                                                "lineNumber": 57,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  String action = args[0];",
                                                "lineNumber": 58,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  String[] actionArgs = null;",
                                                "lineNumber": 59,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  if(args.length > 1){",
                                                "lineNumber": 60,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    actionArgs = new String[args.length-1];",
                                                "lineNumber": 61,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "private static ProcessInfo spawnProcess(String spawnCommand) throws Exception{",
                                                "lineNumber": 84,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  Process exportProcess = Runtime.getRuntime().exec(spawnCommand);",
                                                "lineNumber": 85,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  //Listen for output",
                                                "lineNumber": 86,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  StreamReader normalOutput = new StreamReader(exportProcess.getInputStream());",
                                                "lineNumber": 87,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  }",
                                                "lineNumber": 99,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  private static String createExportCommand(String vcellSchema,String password,String dbHostName,String dbSrvcName,File backupFile){",
                                                "lineNumber": 100,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    return \"exp \"+\"system\"+\"/\"+(password==null?\"xxxxx\":password)+\"@\"+",
                                                "lineNumber": 101,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    \"(description\\\\=(address\\\\=(protocol\\\\=tcp)(host\\\\=\"+dbHostName+\")(port\\\\=1521))(connect_data\\\\=(service_name\\\\=\"+dbSrvcName+\")))\"+",
                                                "lineNumber": 102,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//\t\t\" TABLES=(vc_userinfo) \"+",
                                                "lineNumber": 103,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    \" FILE=\"+backupFile.getAbsolutePath()",
                                                "lineNumber": 104,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    +\" OWNER=\"+vcellSchema+\" CONSISTENT=Y\";",
                                                "lineNumber": 105,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "  }",
                                                "lineNumber": 107,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "if(args.length != 6){",
                                                "lineNumber": 109,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "  return;",
                                                "lineNumber": 111,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 112,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String credentials = args[0];",
                                                "lineNumber": 21,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String dbName = args[1];",
                                                "lineNumber": 22,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "File workingDir = new File(args[2]);",
                                                "lineNumber": 23,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "File exportDir = new File(args[3]);",
                                                "lineNumber": 24,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String userSchema = args[4];",
                                                "lineNumber": 25,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String dbServerName = args[5];",
                                                "lineNumber": 26,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "//\t\t\treturn;",
                                                "lineNumber": 115,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//\t\t}",
                                                "lineNumber": 116,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    String dbHostName = args[0];",
                                                "lineNumber": 117,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    String vcellSchema = args[1];",
                                                "lineNumber": 118,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    String password = args[2];",
                                                "lineNumber": 119,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    String dbSrvcName = args[3];",
                                                "lineNumber": 120,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    File workingDir = new File(args[4]);",
                                                "lineNumber": 121,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    File exportDir = new File(args[5]);",
                                                "lineNumber": 122,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 129,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "String baseFileName = null;",
                                                "lineNumber": 130,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "File backupFile = null;",
                                                "lineNumber": 131,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    try{",
                                                "lineNumber": 132,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      String datePart = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\").format(Calendar.getInstance().getTime());",
                                                "lineNumber": 133,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      baseFileName = dbServerName+\"_\"+dbName+\"_\"+userSchema+\"_\"+datePart;",
                                                "lineNumber": 33,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      File backupFile = new File(workingDir,baseFileName+\".dmp\");",
                                                "lineNumber": 34,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      String exportCommand =",
                                                "lineNumber": 35,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "        \"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                                                "lineNumber": 36,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "        ",
                                                "lineNumber": 37,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      baseFileName = dbHostName+\"_\"+dbSrvcName+\"_\"+vcellSchema+\"_\"+datePart;",
                                                "lineNumber": 134,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      backupFile = new File(workingDir,baseFileName+\".dmp\");",
                                                "lineNumber": 135,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//\t\t\tString exportCommand =",
                                                "lineNumber": 136,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//\t\t\t\t\"exp \"+credentials+\"@\"+dbName+\" FILE=\"+backupFile.getAbsolutePath()+\" OWNER=\"+userSchema+\" CONSISTENT=Y\";",
                                                "lineNumber": 137,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      String exportCommand = createExportCommand(vcellSchema, password, dbHostName, dbSrvcName, backupFile);",
                                                "lineNumber": 138,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//\t\t\tSystem.out.println(exportCommand);",
                                                "lineNumber": 139,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "      //Create export Process",
                                                "lineNumber": 140,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "      final Process exportProcess = Runtime.getRuntime().exec(exportCommand);",
                                                "lineNumber": 39,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      //Listen for output",
                                                "lineNumber": 40,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "      final boolean[] outReadFlag = new boolean[1];",
                                                "lineNumber": 41,
                                                "lineChange": "removed"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/ammarx/TagAPI_3/commit/cdc43ec0f44be26d080b8106cb8df503bb4e6599?diff=split#diff-7bdd4dadff7e107738652c771a83bb84L19",
                                        "lines": [
                                            {
                                                "line": " */",
                                                "lineNumber": 16,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//we will be using this for testing only...",
                                                "lineNumber": 17,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "public static void main(String[] args) {",
                                                "lineNumber": 18,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    // TODO code application logic here",
                                                "lineNumber": 19,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    //*** Remove this as this is required for it to work fully...",
                                                "lineNumber": 20,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": " Local local = new Local();",
                                                "lineNumber": 23,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "Network network = new Network();",
                                                "lineNumber": 24,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String UsernameToUse = args[0];",
                                                "lineNumber": 26,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String VersionToUse = args[1];",
                                                "lineNumber": 27,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "String UsernameToUse = \"Ammar_Ahmad\";",
                                                "lineNumber": 26,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "String VersionToUse = \"1.7.2\";",
                                                "lineNumber": 27,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "String OperatingSystemToUse = utils.getOS();",
                                                "lineNumber": 28,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"OS: \" + OperatingSystemToUse);",
                                                "lineNumber": 29,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//get profile",
                                                "lineNumber": 36,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"Getting profile details\");",
                                                "lineNumber": 37,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "network.downloadProfile(OperatingSystemToUse, UsernameToUse);",
                                                "lineNumber": 38,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "network.downloadVersionManifest(utils.getMineCraft_Version_Manifest_json(OperatingSystemToUse));",
                                                "lineNumber": 39,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String MOD_id = null;",
                                                "lineNumber": 52,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//check if it is vanilla or not",
                                                "lineNumber": 53,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (local.checkIfVanillaMC(VersionToUse).equals(true)) {",
                                                "lineNumber": 54,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"Vanilla Minecraft found!\");",
                                                "lineNumber": 55,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 57,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"Modded Minecraft found!\");",
                                                "lineNumber": 58,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    local.MOD_readJson_libraries_name_PLUS_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 59,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    for (int i = 0; i < local.version_name_list.size(); i++) {",
                                                "lineNumber": 60,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        System.out.println(local.version_name_list.get(i));",
                                                "lineNumber": 61,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    }",
                                                "lineNumber": 78,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    ",
                                                "lineNumber": 79,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "    MOD_inheritsFrom = local.readJson_inheritsFrom(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 80,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"inheritsFrom: \" + MOD_inheritsFrom);",
                                                "lineNumber": 81,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MOD_jar = local.readJson_jar(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 83,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"jar: \" + MOD_jar);",
                                                "lineNumber": 84,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MOD_assets = local.readJson_assets(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 86,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"assets: \" + MOD_assets);",
                                                "lineNumber": 87,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MOD_minecraftArguments = local.readJson_minecraftArguments(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 89,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"minecraftArguments: \" + MOD_minecraftArguments);",
                                                "lineNumber": 90,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MOD_mainClass = local.readJson_mainClass(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 92,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"mainClass: \" + MOD_mainClass);",
                                                "lineNumber": 93,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MOD_id = local.readJson_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 95,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"id: \" + MOD_id);",
                                                "lineNumber": 96,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 97,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_inheritsFrom == null) {",
                                                "lineNumber": 99,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"Using: \" + VersionToUse);",
                                                "lineNumber": 100,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 102,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    VersionToUse = MOD_inheritsFrom;",
                                                "lineNumber": 103,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"Using: \" + VersionToUse);",
                                                "lineNumber": 104,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 106,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//download 1.7.10.json_libs",
                                                "lineNumber": 115,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int i = 0; i < local.version_manifest_versions_id.size(); i++) {",
                                                "lineNumber": 116,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    if (local.version_manifest_versions_id.get(i).equals(VersionToUse)) {",
                                                "lineNumber": 117,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        network.downloadVersionJson(OperatingSystemToUse, local.version_manifest_versions_url.get(i).toString(), local.version_manifest_versions_id.get(i).toString());",
                                                "lineNumber": 118,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        break;",
                                                "lineNumber": 119,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 136,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.print(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 138,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.print(\"\\n\\n\");",
                                                "lineNumber": 139,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 141,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 142,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 143,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 140,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    local.readJson_libraries_downloads_artifact_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 141,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "} catch (Exception ex) {",
                                                "lineNumber": 143,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 145,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 146,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    local.readJson_libraries_downloads_artifact_path(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 147,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "} catch (Exception ex) {",
                                                "lineNumber": 149,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 151,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 152,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    local.readJson_libraries_name(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 153,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "} catch (Exception ex) {",
                                                "lineNumber": 155,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "///************************************************************",
                                                "lineNumber": 158,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int i = 0; i < local.version_url_list.size(); i++) {",
                                                "lineNumber": 159,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//this may need to be edited!*************//",
                                                "lineNumber": 172,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                                                "lineNumber": 159,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                                                "lineNumber": 160,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 173,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    System.out.println(local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                                                "lineNumber": 174,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "} catch (Exception ex) {",
                                                "lineNumber": 176,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 180,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    System.out.println(local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)));",
                                                "lineNumber": 181,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "} catch (Exception ex) {",
                                                "lineNumber": 182,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    System.err.println(ex);",
                                                "lineNumber": 183,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "//get assets index id!",
                                                "lineNumber": 186,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "network.downloadLaunchermeta(OperatingSystemToUse, local.readJson_assetIndex_url(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse)), local.readJson_assetIndex_id(utils.getMin",
                                                "lineNumber": 187,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 189,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "local.readJson_objects_KEY(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))));",
                                                "lineNumber": 191,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "local.readJson_objects_KEY_hash(utils.getMineCraftAssetsIndexes_X_json(OperatingSystemToUse, local.readJson_assetIndex_id(utils.getMineCraft_Version_Json(OperatingSystemToUse, VersionToUse))))",
                                                "lineNumber": 192,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int i = 0; i < local.objects_hash.size(); i++) {",
                                                "lineNumber": 194,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"DOWNLOADING MINECRAFT JAR\");",
                                                "lineNumber": 206,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_jar == null) {",
                                                "lineNumber": 207,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    network.downloadMinecraftJar(OperatingSystemToUse, VersionToUse);",
                                                "lineNumber": 208,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 210,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    network.downloadMinecraftJar(OperatingSystemToUse, MOD_jar);",
                                                "lineNumber": 211,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 213,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//would have tp edit this line as we also need natives paths!",
                                                "lineNumber": 215,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"Getting NATIVES URL\");",
                                                "lineNumber": 216,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "local.readJson_libraries_downloads_classifiers_natives_X(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                                                "lineNumber": 217,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"Getting NATIVES PATH\");",
                                                "lineNumber": 218,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "local.readJson_libraries_downloads_classifiers_natives_Y(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse), OperatingSystemToUse);",
                                                "lineNumber": 219,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int i = 0; i < local.version_url_list_natives.size(); i++) {",
                                                "lineNumber": 221,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(\"Extracting...\");",
                                                "lineNumber": 225,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(local.version_url_list_natives.get(i).toString());",
                                                "lineNumber": 226,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    System.out.println(utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 227,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    utils.jarExtract(OperatingSystemToUse, local.version_path_list_natives.get(i).toString(), utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 229,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 231,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "//String HalfArgumentTemplate = local.readJson_minecraftArguments(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 235,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String mainClass;",
                                                "lineNumber": 244,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_mainClass == null){",
                                                "lineNumber": 212,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "if (MOD_mainClass == null) {",
                                                "lineNumber": 245,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    mainClass = local.readJson_mainClass(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 246,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    ",
                                                "lineNumber": 214,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 248,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    mainClass =  MOD_mainClass;",
                                                "lineNumber": 216,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "    mainClass = MOD_mainClass;",
                                                "lineNumber": 249,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 250,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String NativesDir = utils.getMineCraft_Versions_X_Natives(OperatingSystemToUse, VersionToUse);",
                                                "lineNumber": 252,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String assetsIdexId;",
                                                "lineNumber": 253,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_assets == null){",
                                                "lineNumber": 221,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "if (MOD_assets == null) {",
                                                "lineNumber": 254,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    assetsIdexId = local.readJson_assets(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 255,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 257,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    assetsIdexId = MOD_assets;",
                                                "lineNumber": 258,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 259,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String versionName;",
                                                "lineNumber": 267,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_id == null){",
                                                "lineNumber": 232,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "if (MOD_id == null) {",
                                                "lineNumber": 268,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    versionName = local.readJson_id(utils.getMineCraft_Versions_X_X_json(OperatingSystemToUse, VersionToUse));",
                                                "lineNumber": 269,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 270,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    versionName = MOD_id;",
                                                "lineNumber": 271,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 272,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String authuuid = local.readJson_id(utils.getMineCraft_X_json(OperatingSystemToUse, UsernameToUse));",
                                                "lineNumber": 274,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String Username = UsernameToUse;",
                                                "lineNumber": 275,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String MinecraftJar;",
                                                "lineNumber": 276,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "if (MOD_jar == null){",
                                                "lineNumber": 242,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "if (MOD_jar == null) {",
                                                "lineNumber": 277,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, VersionToUse);",
                                                "lineNumber": 278,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} else {",
                                                "lineNumber": 280,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    MinecraftJar = utils.getMineCraft_Versions_X_X_jar(OperatingSystemToUse, MOD_jar);",
                                                "lineNumber": 281,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "}",
                                                "lineNumber": 282,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String GameAssets = utils.getMineCraftAssetsVirtualLegacyLocation(OperatingSystemToUse);",
                                                "lineNumber": 287,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"NativesPath: \" + NativesDir);",
                                                "lineNumber": 288,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int i = 0; i < local.version_path_list.size(); i++) {",
                                                "lineNumber": 290,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String HalfLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse);",
                                                "lineNumber": 295,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String FullLibraryArgument = local.generateLibrariesArguments(OperatingSystemToUse) + utils.getArgsDiv(OperatingSystemToUse) + MinecraftJar;",
                                                "lineNumber": 296,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"HalfLibraryArgument: \" + HalfLibraryArgument);",
                                                "lineNumber": 297,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"FullLibraryArgument: \" + FullLibraryArgument);",
                                                "lineNumber": 298,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "String HalfArgument = local.generateMinecraftArguments(OperatingSystemToUse, Username, versionName, gameDirectory, AssetsRoot, assetsIdexId, authuuid, \"aeef7bc935f9420eb6314dea7ad7e1e5\", \"{\\\"t",
                                                "lineNumber": 300,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"HalfArgument: \" + HalfArgument);",
                                                "lineNumber": 301,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"Minecraft.jar: \" + MinecraftJar);",
                                                "lineNumber": 302,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"username: \" + Username);",
                                                "lineNumber": 304,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"version number: \" + versionName);",
                                                "lineNumber": 305,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"game directory: \" + gameDirectory);",
                                                "lineNumber": 306,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"assets root directory: \" + AssetsRoot);",
                                                "lineNumber": 307,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"assets Index Id: \" + assetsIdexId);",
                                                "lineNumber": 308,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(\"assets legacy directory: \" + GameAssets);",
                                                "lineNumber": 309,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "System.out.println(local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument));",
                                                "lineNumber": 310,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "try {",
                                                "lineNumber": 312,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    String ArgsX = local.generateRunnableArguments(Xmx, NativesDir, FullLibraryArgument, mainClass, HalfArgument);",
                                                "lineNumber": 314,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    Runtime.getRuntime().exec(\"java \" + ArgsX);",
                                                "lineNumber": 315,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "} catch (Exception e) {",
                                                "lineNumber": 317,
                                                "lineChange": "none"
                                            }
                                        ]
                                    }
                                ],
                                "exampleCommitDescriptions": [
                                    "- generating lineCharts is possible",
                                    "Integrated MERT and decoder (though still need to integrate -decV option)."
                                ],
                                "precision": "very-high",
                                "repoDatasetSize": 7,
                                "cwe": ["CWE-78"]
                            }
                        },
                        {
                            "id": "java/Sqli",
                            "name": "Sqli",
                            "shortDescription": {
                                "text": "SQL Injection"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "help": {
                                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                                "text": ""
                            },
                            "properties": {
                                "tags": ["java"],
                                "categories": ["Security"],
                                "exampleCommitFixes": [
                                    {
                                        "commitURL": "https://github.com/jeffdcamp/dbtools-android/commit/2643c30c302955a03233847c154350e424cca1d9?diff=split#diff-e2f0ab1619799e644c57ba98ebe6f39aL474",
                                        "lines": [
                                            {
                                                "line": "}",
                                                "lineNumber": 471,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "public int delete(@Nonnull SQLiteDatabase db, @Nullable String where, @Nullable String[] whereArgs) {",
                                                "lineNumber": 473,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "public int delete(@Nonnull DatabaseWrapper db, @Nullable String where, @Nullable String[] whereArgs) {",
                                                "lineNumber": 412,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    checkDB(db);",
                                                "lineNumber": 474,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    int rowsAffected = 0;",
                                                "lineNumber": 475,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "for (int tryCount = 0; tryCount < MAX_TRY_COUNT && !success; tryCount++) {",
                                                "lineNumber": 479,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    try {",
                                                "lineNumber": 480,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        rowsAffected = db.delete(getTableName(), where, whereArgs);",
                                                "lineNumber": 481,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        postDeleteEvent(db, getTableName(), rowsAffected);",
                                                "lineNumber": 482,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        success = true;",
                                                "lineNumber": 483,
                                                "lineChange": "none"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/keycloak/keycloak/commit/c8c86d2badb5ed97f9fbfe2c98e190c5a73cdb66?diff=split#diff-df89d441bd8b2c3dd63c28b12e23245dL47",
                                        "lines": [
                                            {
                                                "line": "@Inject",
                                                "lineNumber": 45,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "private EntityManager entityManager;",
                                                "lineNumber": 46,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "@Context",
                                                "lineNumber": 48,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "@Path(\"{id}\")",
                                                "lineNumber": 99,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "@Produces(\"application/json\")",
                                                "lineNumber": 100,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "public Response findById(@PathParam(\"id\") String id) {",
                                                "lineNumber": 101,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + id).getResultList();",
                                                "lineNumber": 102,
                                                "lineChange": "removed"
                                            },
                                            {
                                                "line": "    List result = this.entityManager.createQuery(\"from Album where id = \" + Long.valueOf(id)).getResultList();",
                                                "lineNumber": 102,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "    if (result.isEmpty()) {",
                                                "lineNumber": 104,
                                                "lineChange": "none"
                                            }
                                        ]
                                    },
                                    {
                                        "commitURL": "https://github.com/nuls-io/nuls/commit/7ff6aaf43ba54ec5cce6d03f7243e5a941fb3e4a?diff=split#diff-0444fba3b07c567a52ceed78978dc18bR532",
                                        "lines": [
                                            {
                                                "line": "}",
                                                "lineNumber": 536,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": " * @return",
                                                "lineNumber": 529,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": " */",
                                                "lineNumber": 530,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "@Deprecated",
                                                "lineNumber": 531,
                                                "lineChange": "added"
                                            },
                                            {
                                                "line": "public static Result delete(String area, String key) {",
                                                "lineNumber": 538,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    if (!baseCheckArea(area)) {",
                                                "lineNumber": 539,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        return new Result(true, \"KV_AREA_NOT_EXISTS\");",
                                                "lineNumber": 540,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    }",
                                                "lineNumber": 541,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    if (StringUtils.isBlank(key)) {",
                                                "lineNumber": 542,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        return Result.getFailed(KernelErrorCode.NULL_PARAMETER);",
                                                "lineNumber": 543,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    }",
                                                "lineNumber": 544,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    try {",
                                                "lineNumber": 545,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        DB db = AREAS.get(area);",
                                                "lineNumber": 546,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        db.delete(bytes(key));",
                                                "lineNumber": 547,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "        return Result.getSuccess();",
                                                "lineNumber": 548,
                                                "lineChange": "none"
                                            },
                                            {
                                                "line": "    } catch (Exception e) {",
                                                "lineNumber": 549,
                                                "lineChange": "none"
                                            }
                                        ]
                                    }
                                ],
                                "exampleCommitDescriptions": [
                                    "- Support hive user impersonation on hive tables page",
                                    "* Moves converter pattern to Java 11",
                                    "Add query logging."
                                ],
                                "precision": "very-high",
                                "repoDatasetSize": 197,
                                "cwe": ["CWE-89"]
                            }
                        }
                    ]
                }
            },
            "results": [
                {
                    "ruleId": "java/HardcodedPassword",
                    "ruleIndex": 0,
                    "level": "warning",
                    "message": {
                        "text": "Do not hardcode passwords in code. Found password string",
                        "markdown": "Do not hardcode passwords in code. Found password {0}",
                        "arguments": ["[string](0)"]
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "src/main/java/SQLInjectionExample.java",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 7,
                                    "endLine": 7,
                                    "startColumn": 26,
                                    "endColumn": 53
                                }
                            }
                        }
                    ],
                    "fingerprints": {
                        "0": "e7b68554f80585d425a5b1c0a53fb85eea090d91790faef0175cfbcdf07dfd53",
                        "1": "f6e0d636.3a2c2f49.14535f1c.0df7106a.9f0da8c9.46551bc6.882337aa.558e2e03.f6e0d636.3a2c2f49.14535f1c.0df7106a.9f0da8c9.46551bc6.882337aa.558e2e03"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "id": 0,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 7,
                                                        "endLine": 7,
                                                        "startColumn": 96,
                                                        "endColumn": 102
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "properties": {
                        "priorityScore": 570,
                        "priorityScoreFactors": [
                            {
                                "label": true,
                                "type": "hotFileSource"
                            },
                            {
                                "label": true,
                                "type": "fixExamples"
                            }
                        ]
                    }
                },
                {
                    "ruleId": "java/IndirectCommandInjection",
                    "ruleIndex": 1,
                    "level": "note",
                    "message": {
                        "text": "Unsanitized input from a command line argument flows into exec, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
                        "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. Forwarding command-line arguments or file paths from the local environment to a function that executes a system command can change the meaning of the command unexpectedly due to unescaped special characters, which may result in a Indirect Command Injection vulnerability.",
                        "arguments": [
                            "[a command line argument](0)",
                            "[flows](1),(2)",
                            "[exec](3)"
                        ]
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "src/main/java/CMDInjectionExample.java",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 6,
                                    "endLine": 6,
                                    "startColumn": 24,
                                    "endColumn": 49
                                }
                            }
                        }
                    ],
                    "fingerprints": {
                        "0": "b4b4a4f3ce9eee77a599452ef1bdb93f6fb98a4f428b8284dccc9fad61f34bec",
                        "1": "682e2f2f.9d660196.5429b0be.922bc895.025462d2.b368e0bf.df7e59ba.26e528aa.8df8fa68.850ea824.622565c7.c93ef281.025462d2.b368e0bf.377b98a3.54d46e25"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "id": 0,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/CMDInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 64,
                                                        "endColumn": 71
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 1,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/CMDInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 64,
                                                        "endColumn": 71
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 2,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/CMDInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 50,
                                                        "endColumn": 71
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 3,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/CMDInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 6,
                                                        "endLine": 6,
                                                        "startColumn": 24,
                                                        "endColumn": 49
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "properties": {
                        "priorityScore": 370,
                        "priorityScoreFactors": [
                            {
                                "label": true,
                                "type": "hotFileCodeFlow"
                            },
                            {
                                "label": true,
                                "type": "fixExamples"
                            }
                        ]
                    }
                },
                {
                    "ruleId": "java/Sqli",
                    "ruleIndex": 2,
                    "level": "warning",
                    "message": {
                        "text": "Unsanitized input from a command line argument flows into executeQuery, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                        "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
                        "arguments": [
                            "[a command line argument](0)",
                            "[flows](1),(2),(3),(4),(5),(6)",
                            "[executeQuery](7)"
                        ]
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "src/main/java/SQLInjectionExample.java",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 11,
                                    "endLine": 11,
                                    "startColumn": 24,
                                    "endColumn": 41
                                }
                            }
                        }
                    ],
                    "fingerprints": {
                        "0": "5bc4bf6ab3231947ccd0ff5a4ee5a9c6a2c016ed663ec85eccfa4dff5c551ad4",
                        "1": "19689298.6f391d93.5a5d16e4.ede9cf8e.772ba09f.2f4e1548.df7e59ba.54d46e25.5fe12d98.6f391d93.14535f1c.e22980a8.bab812df.64c5dc98.882337aa.558e2e03"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "id": 0,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 5,
                                                        "endLine": 5,
                                                        "startColumn": 29,
                                                        "endColumn": 36
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 1,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 5,
                                                        "endLine": 5,
                                                        "startColumn": 29,
                                                        "endColumn": 36
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 2,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 5,
                                                        "endLine": 5,
                                                        "startColumn": 16,
                                                        "endColumn": 36
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 3,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 9,
                                                        "endLine": 9,
                                                        "startColumn": 24,
                                                        "endColumn": 77
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 4,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 9,
                                                        "endLine": 9,
                                                        "startColumn": 24,
                                                        "endColumn": 84
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 5,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 9,
                                                        "endLine": 9,
                                                        "startColumn": 16,
                                                        "endColumn": 84
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 6,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 11,
                                                        "endLine": 11,
                                                        "startColumn": 42,
                                                        "endColumn": 47
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "id": 7,
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "src/main/java/SQLInjectionExample.java",
                                                        "uriBaseId": "%SRCROOT%"
                                                    },
                                                    "region": {
                                                        "startLine": 11,
                                                        "endLine": 11,
                                                        "startColumn": 24,
                                                        "endColumn": 41
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "properties": {
                        "priorityScore": 570,
                        "priorityScoreFactors": [
                            {
                                "label": true,
                                "type": "hotFileSource"
                            },
                            {
                                "label": true,
                                "type": "fixExamples"
                            }
                        ]
                    }
                }
            ],
            "properties": {
                "coverage": [
                    {
                        "files": 1,
                        "isSupported": true,
                        "lang": "XML"
                    },
                    {
                        "files": 2,
                        "isSupported": true,
                        "lang": "Java"
                    }
                ]
            }
        }
    ]
}
